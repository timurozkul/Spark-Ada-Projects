<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6-gnatprove" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4_CE" version="1.6-gnatprove" timelimit="1" steplimit="0" memlimit="1000"/>
<file>
<path name=".."/>
<path name="power_grid_energy_stabilizer.mlw"/>
<theory name="Power_grid_energy_stabilizer__package_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__init__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="precondition">
  </goal>
  <goal name="VC def.3" expl="postcondition">
  </goal>
  <goal name="VC def.4" expl="precondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.6" expl="postcondition">
  <proof prover="0"><result status="unknown" steps="163"/></proof>
  <proof prover="1"><result status="unknown" steps="175"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__print_welcome__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="precondition">
  </goal>
  <goal name="VC def.3" expl="precondition">
  </goal>
  <goal name="VC def.4" expl="precondition">
  </goal>
  <goal name="VC def.5" expl="precondition">
  </goal>
  <goal name="VC def.6" expl="precondition">
  </goal>
  <goal name="VC def.7" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__is_critical__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__read_consumption__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="postcondition">
  </goal>
  <goal name="VC def.3" expl="postcondition">
  </goal>
  <goal name="VC def.4" expl="postcondition">
  </goal>
  <goal name="VC def.5" expl="postcondition">
  </goal>
  <goal name="VC def.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="precondition">
  </goal>
  <goal name="VC def.10" expl="precondition">
  </goal>
  <goal name="VC def.11" expl="precondition">
  </goal>
  <goal name="VC def.12" expl="postcondition">
  </goal>
  <goal name="VC def.13" expl="loop invariant preservation">
  <proof prover="0"><result status="unknown" steps="25"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" steps="39"/></proof>
  </goal>
  <goal name="VC def.14" expl="loop invariant preservation">
  <proof prover="0"><result status="unknown" steps="25"/></proof>
  <proof prover="1"><result status="unknown" steps="39"/></proof>
  </goal>
  <goal name="VC def.15" expl="postcondition">
  </goal>
  <goal name="VC def.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="19"/></proof>
  </goal>
  <goal name="VC def.17" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__read_supply__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="postcondition">
  </goal>
  <goal name="VC def.3" expl="postcondition">
  </goal>
  <goal name="VC def.4" expl="postcondition">
  </goal>
  <goal name="VC def.5" expl="postcondition">
  </goal>
  <goal name="VC def.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="precondition">
  </goal>
  <goal name="VC def.10" expl="precondition">
  </goal>
  <goal name="VC def.11" expl="precondition">
  </goal>
  <goal name="VC def.12" expl="postcondition">
  </goal>
  <goal name="VC def.13" expl="loop invariant preservation">
  <proof prover="0"><result status="unknown" steps="25"/></proof>
  <proof prover="1"><result status="unknown" steps="39"/></proof>
  </goal>
  <goal name="VC def.14" expl="loop invariant preservation">
  <proof prover="0"><result status="unknown" steps="25"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" steps="39"/></proof>
  </goal>
  <goal name="VC def.15" expl="postcondition">
  </goal>
  <goal name="VC def.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="19"/></proof>
  </goal>
  <goal name="VC def.17" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__energy_stabilizerg_system__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="postcondition">
  </goal>
  <goal name="VC def.2" expl="postcondition">
  </goal>
  <goal name="VC def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="79"/></proof>
  </goal>
  <goal name="VC def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="78"/></proof>
  </goal>
  <goal name="VC def.5" expl="precondition">
  </goal>
  <goal name="VC def.6" expl="precondition">
  </goal>
  <goal name="VC def.7" expl="precondition">
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="precondition">
  </goal>
  <goal name="VC def.10" expl="precondition">
  </goal>
  <goal name="VC def.11" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="unknown" steps="156"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" steps="184"/></proof>
  </goal>
  <goal name="VC def.12" expl="postcondition">
  </goal>
  <goal name="VC def.13" expl="precondition">
  </goal>
  <goal name="VC def.14" expl="postcondition">
  </goal>
  <goal name="VC def.15" expl="postcondition">
  </goal>
  <goal name="VC def.15" expl="precondition">
  </goal>
  <goal name="VC def.17" expl="postcondition">
  <proof prover="0"><result status="unknown" steps="220"/></proof>
  <proof prover="1"><result status="unknown" steps="287"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__print_status__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="precondition">
  </goal>
  <goal name="VC def.3" expl="precondition">
  </goal>
  <goal name="VC def.4" expl="precondition">
  </goal>
  <goal name="VC def.5" expl="precondition">
  </goal>
  <goal name="VC def.6" expl="precondition">
  </goal>
  <goal name="VC def.7" expl="precondition">
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="precondition">
  </goal>
  <goal name="VC def.10" expl="precondition">
  </goal>
  <goal name="VC def.11" expl="precondition">
  </goal>
  <goal name="VC def.12" expl="precondition">
  </goal>
  <goal name="VC def.13" expl="precondition">
  </goal>
  <goal name="VC def.14" expl="precondition">
  </goal>
  <goal name="VC def.15" expl="precondition">
  </goal>
  <goal name="VC def.16" expl="precondition">
  </goal>
  <goal name="VC def.17" expl="precondition">
  </goal>
  <goal name="VC def.18" expl="precondition">
  </goal>
  <goal name="VC def.19" expl="precondition">
  </goal>
  <goal name="VC def.20" expl="precondition">
  </goal>
  <goal name="VC def.21" expl="precondition">
  </goal>
  <goal name="VC def.22" expl="precondition">
  </goal>
  <goal name="VC def.23" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__status_electricity_system_to_string__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__refill_reserve__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="89"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" steps="135"/></proof>
  </goal>
  <goal name="VC def.2" expl="postcondition">
  </goal>
  <goal name="VC def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="13"/></proof>
  </goal>
  <goal name="VC def.4" expl="postcondition">
  </goal>
  <goal name="VC def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="75"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" steps="133"/></proof>
  </goal>
  <goal name="VC def.6" expl="precondition">
  </goal>
  <goal name="VC def.7" expl="precondition">
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="precondition">
  </goal>
  <goal name="VC def.10" expl="precondition">
  </goal>
  <goal name="VC def.11" expl="precondition">
  </goal>
  <goal name="VC def.12" expl="precondition">
  </goal>
  <goal name="VC def.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.15" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="VC def.17" expl="postcondition">
  </goal>
  <goal name="VC def.18" expl="precondition">
  </goal>
  <goal name="VC def.19" expl="postcondition">
  </goal>
  <goal name="VC def.19" expl="precondition">
  </goal>
  <goal name="VC def.21" expl="postcondition">
  <proof prover="0"><result status="unknown" steps="275"/></proof>
  <proof prover="1"><result status="timeout" steps="17761"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__print_reserve_levels__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="precondition">
  </goal>
  <goal name="VC def.2" expl="precondition">
  </goal>
  <goal name="VC def.3" expl="precondition">
  </goal>
  <goal name="VC def.4" expl="precondition">
  </goal>
  <goal name="VC def.5" expl="precondition">
  </goal>
  <goal name="VC def.6" expl="precondition">
  </goal>
  <goal name="VC def.7" expl="precondition">
  </goal>
  <goal name="VC def.8" expl="precondition">
  </goal>
  <goal name="VC def.9" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Power_grid_energy_stabilizer__is_safe__subprogram_def">
 <goal name="VC def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="VC def.0" expl="postcondition">
  </goal>
  <goal name="VC def.1" expl="postcondition">
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
